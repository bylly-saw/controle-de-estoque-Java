/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import controle.ControleVenda;
import entidade.CVenda;
import entidade.ModeloTabela;
import entidade.ModeloTabelaItensVenda;
import java.math.BigDecimal;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import util.ConectaBanco;
import entidade.JMoneyField;
import entidade.JPercentField;
import javax.swing.JTable;

/**
 *
 * @author Henike
 */
public class TelaCadastroVenda extends javax.swing.JFrame {

    ConectaBanco conex = ConectaBanco.getInstance();
    CVenda venda = new CVenda();
    ControleVenda control = new ControleVenda();
    int flag = 1, codv;
    String user;
    float difParc;
    BigDecimal difParcBD;

    /**
     * Creates new form TelaCadastroVenda
     *
     * @param user
     */
    public TelaCadastroVenda(String user) {
        control.cancelaVenda();
        this.user = user;
        initComponents();
        getRootPane().setDefaultButton(jButtonFinalizar);

        conex.conexao();
        try {
            jTextFieldTotalComp.setText("0.00");

            MaskFormatter form = new MaskFormatter("##/##/####");
            jFormattedTextFieldData.setFormatterFactory(new DefaultFormatterFactory(form));
            // pega data do sistema
            SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            Date hoje = new Date();
            jFormattedTextFieldData.setText(df.format(hoje));

            java.sql.Date data = new java.sql.Date(df.parse(df.format(hoje)).getTime());

            PreparedStatement pst = conex.conn.prepareStatement("insert into venda(total, data) values(?,?)");
            pst.setFloat(1, 0);
            pst.setDate(2, data);
            pst.execute();

            conex.executaSQL("select * from venda where total=0");
            conex.rs.last();
            codv = conex.rs.getInt("codv");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao inserir venda!/n" + ex.getMessage().replaceAll("ERROR:", ""));
        } catch (ParseException ex) {
            //Logger.getLogger(TelaCadastroVenda.class.getName()).log(Level.SEVERE, null, ex);
        }
        conex.desconecta();

        //por default o tipo de venda é à vista
        jRadioButtonAVista.setSelected(true);
        jTextFieldNumParc.setEnabled(false);
        jTextFieldJuroParc.setEnabled(false);
        jTextFieldValorParc.setEnabled(false);
        jComboBoxDiaVenc.setEnabled(false);
        jTextFieldDescontos.setEnabled(true);
        jFormattedTextFieldTotalReceb.setEnabled(true);
        jTextFieldNumParc.setText("");
        jTextFieldValorParc.setText("");
        jTextFieldDescontos.setText("0");
        String descontos = jTextFieldDescontos.getText().replace(",", ".");
        BigDecimal totalfinal = new BigDecimal(Float.parseFloat(jTextFieldTotalComp.getText()) - (Float.parseFloat(jTextFieldTotalComp.getText()) * (Float.parseFloat(descontos) / 100))).setScale(2, BigDecimal.ROUND_HALF_UP);
        jTextFieldTotal.setText(String.valueOf(totalfinal));
        jTextFieldJuroParc.setText("");
        ////////////////////////////////////////

        this.preencherComboBoxDiaVenc();
    }

    private TelaCadastroVenda() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jFormattedTextFieldData = new javax.swing.JFormattedTextField();
        jButtonBuscaCli = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldProduto = new javax.swing.JTextField();
        jButtonBuscaProd = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldQtde = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldValorItem = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldTotalComp = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPesquisa = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaItensVenda = new javax.swing.JTable();
        jButtonFinalizar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonAddItem = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldDescontos = new JPercentField();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldTotal = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jButtonExcluirProd = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldTroco = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jButtonAjuda = new javax.swing.JButton();
        jTextFieldJuroParc = new JPercentField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldValorParc = new javax.swing.JTextField();
        jRadioButtonAVista = new javax.swing.JRadioButton();
        jRadioButtonAPrazo = new javax.swing.JRadioButton();
        jRadioButtonCheque = new javax.swing.JRadioButton();
        jRadioButtonCartaoCred = new javax.swing.JRadioButton();
        jRadioButtonOutros = new javax.swing.JRadioButton();
        jRadioButtonCartaoDeb = new javax.swing.JRadioButton();
        jLabel18 = new javax.swing.JLabel();
        jComboBoxDiaVenc = new javax.swing.JComboBox<>();
        jTextFieldNumParc = new javax.swing.JTextField();
        jFormattedTextFieldTotalReceb = new JMoneyField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrar venda");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Registrar venda");

        jLabel2.setText("Nome do cliente:");

        jLabel3.setText("Data:");

        jFormattedTextFieldData.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jButtonBuscaCli.setText("Buscar");
        jButtonBuscaCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscaCliActionPerformed(evt);
            }
        });

        jLabel4.setText("Produto:");

        jButtonBuscaProd.setText("Buscar");
        jButtonBuscaProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscaProdActionPerformed(evt);
            }
        });

        jLabel5.setText("Quantidade:");

        jTextFieldQtde.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldQtdeKeyTyped(evt);
            }
        });

        jLabel6.setText("Valor por item R$:");

        jTextFieldValorItem.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldValorItem.setEnabled(false);

        jLabel7.setText("Total compra R$:");

        jTextFieldTotalComp.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldTotalComp.setEnabled(false);
        jTextFieldTotalComp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldTotalCompKeyTyped(evt);
            }
        });

        tabelaPesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelaPesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaPesquisaMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelaPesquisaMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaPesquisa);

        jLabel8.setText("Tabela de pesquisa:");

        jLabel9.setText("Itens da venda:");

        tabelaItensVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelaItensVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tabelaItensVendaMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaItensVenda);

        jButtonFinalizar.setText("Finalizar");
        jButtonFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFinalizarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonAddItem.setText("Adicionar produto");
        jButtonAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddItemActionPerformed(evt);
            }
        });

        jLabel10.setText("Total recebido R$:");

        jLabel11.setText("Descontos %:");

        jTextFieldDescontos.setEnabled(false);
        jTextFieldDescontos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldDescontosKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDescontosKeyTyped(evt);
            }
        });

        jLabel12.setText("TOTAL R$:");

        jTextFieldTotal.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldTotal.setEnabled(false);
        jTextFieldTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldTotalKeyTyped(evt);
            }
        });

        jLabel13.setText("Forma de pagamento:");

        jButtonExcluirProd.setText("Excluir produto");
        jButtonExcluirProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirProdActionPerformed(evt);
            }
        });

        jLabel14.setText("N° parcelas:");

        jTextFieldTroco.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldTroco.setEnabled(false);
        jTextFieldTroco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldTrocoKeyTyped(evt);
            }
        });

        jLabel15.setText("Troco R$:");

        jButtonAjuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/telas/help.gif"))); // NOI18N
        jButtonAjuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjudaActionPerformed(evt);
            }
        });

        jTextFieldJuroParc.setEnabled(false);
        jTextFieldJuroParc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldJuroParcKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldJuroParcKeyTyped(evt);
            }
        });

        jLabel16.setText("Juro das parcelas %:");

        jLabel17.setText("Valor da parcela R$:");

        jTextFieldValorParc.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldValorParc.setEnabled(false);
        jTextFieldValorParc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldValorParcKeyTyped(evt);
            }
        });

        buttonGroup1.add(jRadioButtonAVista);
        jRadioButtonAVista.setText("À vista");
        jRadioButtonAVista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButtonAVistaMouseClicked(evt);
            }
        });
        jRadioButtonAVista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonAVistaActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonAPrazo);
        jRadioButtonAPrazo.setText("À prazo");
        jRadioButtonAPrazo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButtonAPrazoMouseClicked(evt);
            }
        });
        jRadioButtonAPrazo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonAPrazoActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonCheque);
        jRadioButtonCheque.setText("Cheque");
        jRadioButtonCheque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButtonChequeMouseClicked(evt);
            }
        });
        jRadioButtonCheque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonChequeActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonCartaoCred);
        jRadioButtonCartaoCred.setText("Cartão de Crédito");
        jRadioButtonCartaoCred.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButtonCartaoCredMouseClicked(evt);
            }
        });
        jRadioButtonCartaoCred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCartaoCredActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonOutros);
        jRadioButtonOutros.setText("Outros");
        jRadioButtonOutros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButtonOutrosMouseClicked(evt);
            }
        });
        jRadioButtonOutros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOutrosActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonCartaoDeb);
        jRadioButtonCartaoDeb.setText("Cartão de Débito");
        jRadioButtonCartaoDeb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButtonCartaoDebMouseClicked(evt);
            }
        });
        jRadioButtonCartaoDeb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCartaoDebActionPerformed(evt);
            }
        });

        jLabel18.setText("Dia vencimento:");

        jComboBoxDiaVenc.setEnabled(false);

        jTextFieldNumParc.setEnabled(false);
        jTextFieldNumParc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNumParcKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNumParcKeyTyped(evt);
            }
        });

        jFormattedTextFieldTotalReceb.setEnabled(false);
        jFormattedTextFieldTotalReceb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFormattedTextFieldTotalRecebKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jButtonFinalizar)
                .addGap(69, 69, 69)
                .addComponent(jButtonCancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jTextFieldQtde, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldValorItem, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonAddItem))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextFieldCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonBuscaCli))
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextFieldProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonBuscaProd))))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jFormattedTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jRadioButtonCartaoCred)
                                    .addComponent(jRadioButtonAVista, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButtonAPrazo)
                                    .addComponent(jRadioButtonCartaoDeb))
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButtonOutros)
                                    .addComponent(jRadioButtonCheque))
                                .addGap(4, 4, 4))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldTotalComp))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextFieldJuroParc)
                                            .addComponent(jLabel16))
                                        .addGap(45, 45, 45)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel17)
                                            .addComponent(jTextFieldValorParc, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldDescontos, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel11))
                                        .addGap(115, 115, 115)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jFormattedTextFieldTotalReceb, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldNumParc)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(138, 138, 138)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jTextFieldTotal))
                                .addGap(112, 112, 112)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxDiaVenc, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldTroco, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel15)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(54, 54, 54)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonAjuda)
                                    .addComponent(jButtonExcluirProd, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(22, 22, 22))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jButtonAjuda))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscaCli)
                    .addComponent(jTextFieldProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscaProd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldQtde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldValorItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonAddItem)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addGap(9, 9, 9)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonExcluirProd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonAVista)
                    .addComponent(jRadioButtonAPrazo)
                    .addComponent(jRadioButtonCheque)
                    .addComponent(jFormattedTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonCartaoCred)
                    .addComponent(jRadioButtonOutros)
                    .addComponent(jRadioButtonCartaoDeb))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldJuroParc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldValorParc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNumParc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxDiaVenc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel10)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTotalComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDescontos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTroco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldTotalReceb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFinalizar)
                    .addComponent(jButtonCancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuscaCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscaCliActionPerformed
        flag = 1;
        if (jTextFieldCliente.getText().equals("")) {
            this.preencherTabelaCliente("select * from view_cliente_detalhes order by nome limit 100");
        } else {
            this.preencherTabelaCliente("select * from cliente where nome ~* '" + jTextFieldCliente.getText() + "' order by nome");
        }
    }//GEN-LAST:event_jButtonBuscaCliActionPerformed

    private void jButtonBuscaProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscaProdActionPerformed
        flag = 2;
        if (jTextFieldProduto.getText().equals("")) {
            this.preencherTabelaProduto("select distinct * from view_produtos_recentes_detalhes order by nome limit 100");
        } else {
            this.preencherTabelaProduto("select distinct * from view_produtos_recentes_detalhes where nome ~* '" + jTextFieldProduto.getText() + "' order by nome");
        }
    }//GEN-LAST:event_jButtonBuscaProdActionPerformed

    private void tabelaPesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaPesquisaMouseClicked
        if (flag == 1) {
            String nomeCli = "" + tabelaPesquisa.getValueAt(tabelaPesquisa.getSelectedRow(), 0);
            jTextFieldCliente.setText(nomeCli);
        } else {
            conex.conexao();
            String nomeProd = "" + tabelaPesquisa.getValueAt(tabelaPesquisa.getSelectedRow(), 0);
            conex.executaSQL("select * from view_produtos_recentes_detalhes where nome='" + nomeProd + "'");
            try {
                conex.rs.first();
                jTextFieldValorItem.setText(String.valueOf(conex.rs.getBigDecimal("preco_venda")));
                jTextFieldQtde.setText("1");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Erro ao pesquisar o preço!\n" + ex.getMessage().replaceAll("ERROR:", ""));
            }
            conex.desconecta();
        }
    }//GEN-LAST:event_tabelaPesquisaMouseClicked

    private void jButtonAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddItemActionPerformed
        if (flag == 1) {
            JOptionPane.showMessageDialog(null, "Erro ao adicionar o produto!\nUm produto deve ser selecionado.");
        } else {
            try {
                String nomeProd = "" + tabelaPesquisa.getValueAt(tabelaPesquisa.getSelectedRow(), 0);
                venda.setNome_produto(nomeProd);
                venda.setQtde_item(Integer.parseInt(jTextFieldQtde.getText()));
                venda.setPreco_venda(Float.parseFloat(jTextFieldValorItem.getText()));
                venda.setCodv(codv);
                control.inserirItem(venda);

                this.preencherItensVenda("select * from view_itens_venda_detalhes where codv=" + codv + "order by nome");

                //atualiza quantidades de produtos da tabela de produtos
                flag = 2;
                this.preencherTabelaProduto("select * from view_produtos_recentes_detalhes where nome ~* '" + jTextFieldProduto.getText() + "' order by nome");
                ////////////////////////////////////////////////////////

                //jTextFieldDescontos.setText("0");
                String descontos = jTextFieldDescontos.getText().replace(",", ".");
                BigDecimal totalfinal = new BigDecimal(Float.parseFloat(jTextFieldTotalComp.getText()) - (Float.parseFloat(jTextFieldTotalComp.getText()) * (Float.parseFloat(descontos) / 100))).setScale(2, BigDecimal.ROUND_HALF_UP);
                jTextFieldTotal.setText(String.valueOf(totalfinal));

                String totalReceb = jFormattedTextFieldTotalReceb.getText().replace(",", ".");
                if (!"0.00".equals(jFormattedTextFieldTotalReceb.getText()) && !jRadioButtonAPrazo.isSelected()) {
                    BigDecimal troco = new BigDecimal(Float.parseFloat(totalReceb) - Float.parseFloat(jTextFieldTotal.getText())).setScale(2, BigDecimal.ROUND_HALF_UP);
                    jTextFieldTroco.setText(String.valueOf(troco));
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Erro ao adicionar o produto!\nEntrada inválida.");
            } catch (ArrayIndexOutOfBoundsException ex) {

            }

            //caso o número de parcelas já esteja preenchido!!!!!
            try {
                if ("".equals(jTextFieldNumParc.getText())) {
                    jTextFieldValorParc.setText("");
                    jTextFieldTotal.setText(jTextFieldTotalComp.getText());
                } else {
                    Float total = Float.parseFloat(jTextFieldTotalComp.getText());
                    int numParc = Integer.parseInt(jTextFieldNumParc.getText());
                    Float juroParc = Float.parseFloat(jTextFieldJuroParc.getText()) / 100;
                    BigDecimal valorParc = new BigDecimal((total / numParc) + (total / numParc * juroParc)).setScale(2, BigDecimal.ROUND_HALF_UP);
                    jTextFieldValorParc.setText(String.valueOf(valorParc));

                    difParc = (Float.parseFloat(jTextFieldValorParc.getText()) * numParc) - (total + (total * juroParc));
                    BigDecimal totalfinal = new BigDecimal((Float.parseFloat(jTextFieldValorParc.getText()) * numParc) - difParc).setScale(2, BigDecimal.ROUND_HALF_UP);
                    jTextFieldTotal.setText(String.valueOf(totalfinal));
                }
            } catch (NumberFormatException ex) {
                //JOptionPane.showMessageDialog(this, "Descontos inválido!!!!!");
            }
        }
    }//GEN-LAST:event_jButtonAddItemActionPerformed

    private void jButtonFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFinalizarActionPerformed
        if (JOptionPane.showConfirmDialog(rootPane, "Deseja realmente finalizar a venda?", "Finalizar venda", JOptionPane.YES_NO_OPTION) == 0) {
            try {
                String totalReceb = jFormattedTextFieldTotalReceb.getText().replace(",", ".");
                if ((!totalReceb.equals("")
                        && Float.parseFloat(totalReceb) >= Float.parseFloat(jTextFieldTotal.getText()))
                        || jRadioButtonAPrazo.isSelected()) {
                    if (jRadioButtonCartaoCred.isSelected()
                            || jRadioButtonCartaoDeb.isSelected()
                            || jRadioButtonOutros.isSelected()
                            || jRadioButtonCheque.isSelected()
                            || jRadioButtonAVista.isSelected() || Float.parseFloat(jTextFieldTotalComp.getText()) > 0 && Integer.parseInt(jTextFieldNumParc.getText()) > 0
                            && Float.parseFloat(jTextFieldValorParc.getText()) > 0) {
                        venda.setCodv(codv);
                        venda.setData(jFormattedTextFieldData.getText());
                        venda.setHora("");
                        venda.setTotal_compra(Float.parseFloat(jTextFieldTotalComp.getText()));
                        String totalrecebido = "0.00";
                        String descontos = "0.00";
                        if (!jRadioButtonAPrazo.isSelected()) {
                            totalrecebido = jFormattedTextFieldTotalReceb.getText().replace(",", ".");
                            descontos = jTextFieldDescontos.getText().replace(",", ".");
                        } else {
                            venda.setNum_parcelas(Integer.parseInt(jTextFieldNumParc.getText()));
                            venda.setJuro_parcela(Float.parseFloat(jTextFieldJuroParc.getText().replace(",", ".")));
                            venda.setValor_parcela(Float.parseFloat(jTextFieldValorParc.getText()));
                            venda.setDif_primeira_parcela(difParc);
                            venda.setDia_venc(Integer.parseInt((String) jComboBoxDiaVenc.getSelectedItem()));
                        }
                        venda.setTotal_recebido(Float.parseFloat(totalrecebido));
                        venda.setDescontos(Float.parseFloat(descontos));
                        venda.setTotal(Float.parseFloat(jTextFieldTotal.getText()));
                        venda.setNome_cliente(jTextFieldCliente.getText());
                        venda.setLogin(user);
                        venda.setForma_pagamento(this.getFormaPag());
                        if (control.fechaVenda(venda)) {
                            this.dispose();
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Erro ao finalizar a venda!\nVerifique os campos e os valores numéricos.");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao finalizar a venda!\nO total recebido não pode ser menor que o TOTAL.");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Erro ao finalizar a venda!\nVerifique os campos e os valores numéricos.");
            }
        }
    }//GEN-LAST:event_jButtonFinalizarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        if (JOptionPane.showConfirmDialog(rootPane, "Deseja realmente cancelar a venda?", "Cancelar venda", JOptionPane.YES_NO_OPTION) == 0) {
            control.cancelaVenda();
            this.dispose();
        }
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        control.cancelaVenda();
    }//GEN-LAST:event_formWindowClosing

    private void jButtonExcluirProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirProdActionPerformed
        try {
            String nomeProd = "" + tabelaItensVenda.getValueAt(tabelaItensVenda.getSelectedRow(), 0);

            venda.setNome_produto(nomeProd);
            venda.setCodv(codv);
            control.excluirItem(venda);

            this.preencherItensVenda("select * from view_itens_venda_detalhes where codv=" + codv + "order by nome");

            String descontos = jTextFieldDescontos.getText().replace(",", ".");
            if ("".equals(descontos)) {
                descontos = "0";
            }
            BigDecimal totalfinal = new BigDecimal(Float.parseFloat(jTextFieldTotalComp.getText()) - (Float.parseFloat(jTextFieldTotalComp.getText()) * (Float.parseFloat(descontos) / 100))).setScale(2, BigDecimal.ROUND_HALF_UP);
            jTextFieldTotal.setText(String.valueOf(totalfinal));

            String totalReceb = jFormattedTextFieldTotalReceb.getText().replace(",", ".");
            if (!"0.00".equals(jFormattedTextFieldTotalReceb.getText()) && !jRadioButtonAPrazo.isSelected()) {
                BigDecimal troco = new BigDecimal(Float.parseFloat(totalReceb) - Float.parseFloat(jTextFieldTotal.getText())).setScale(2, BigDecimal.ROUND_HALF_UP);
                jTextFieldTroco.setText(String.valueOf(troco));
            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao excluir o produto!\nVerifique os campos numéricos.");
        } catch (ArrayIndexOutOfBoundsException ex) {

        }

        try {
            if ("".equals(jTextFieldNumParc.getText())) {
                jTextFieldValorParc.setText("");
                jTextFieldTotal.setText(jTextFieldTotalComp.getText());
            } else {
                Float total = Float.parseFloat(jTextFieldTotalComp.getText());
                int numParc = Integer.parseInt(jTextFieldNumParc.getText());
                Float juroParc = Float.parseFloat(jTextFieldJuroParc.getText()) / 100;
                BigDecimal valorParc = new BigDecimal((total / numParc) + (total / numParc * juroParc)).setScale(2, BigDecimal.ROUND_HALF_UP);
                jTextFieldValorParc.setText(String.valueOf(valorParc));

                difParc = (Float.parseFloat(jTextFieldValorParc.getText()) * numParc) - (total + (total * juroParc));
                BigDecimal totalfinal = new BigDecimal((Float.parseFloat(jTextFieldValorParc.getText()) * numParc) - difParc).setScale(2, BigDecimal.ROUND_HALF_UP);
                jTextFieldTotal.setText(String.valueOf(totalfinal));
            }
        } catch (NumberFormatException ex) {
            //JOptionPane.showMessageDialog(this, "Descontos inválido!!!!!");
        }
    }//GEN-LAST:event_jButtonExcluirProdActionPerformed

    private void jRadioButtonAPrazoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonAPrazoMouseClicked
        jTextFieldNumParc.setEnabled(true);
        jTextFieldJuroParc.setEnabled(true);
        jComboBoxDiaVenc.setEnabled(true);
        jTextFieldDescontos.setEnabled(false);
        jFormattedTextFieldTotalReceb.setEnabled(false);
        jTextFieldDescontos.setText("");
        jTextFieldJuroParc.setText("0");
        jTextFieldTotal.setText("");
    }//GEN-LAST:event_jRadioButtonAPrazoMouseClicked

    private void jRadioButtonAVistaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonAVistaMouseClicked
        jTextFieldNumParc.setEnabled(false);
        jTextFieldJuroParc.setEnabled(false);
        jTextFieldValorParc.setEnabled(false);
        jComboBoxDiaVenc.setEnabled(false);
        jTextFieldDescontos.setEnabled(true);
        jFormattedTextFieldTotalReceb.setEnabled(true);
        jTextFieldNumParc.setText("");
        jTextFieldValorParc.setText("");
        jTextFieldDescontos.setText("0");
        String descontos = jTextFieldDescontos.getText().replace(",", ".");
        BigDecimal totalfinal = new BigDecimal(Float.parseFloat(jTextFieldTotalComp.getText()) - (Float.parseFloat(jTextFieldTotalComp.getText()) * (Float.parseFloat(descontos) / 100))).setScale(2, BigDecimal.ROUND_HALF_UP);
        jTextFieldTotal.setText(String.valueOf(totalfinal));
        jTextFieldJuroParc.setText("");
    }//GEN-LAST:event_jRadioButtonAVistaMouseClicked

    private void jRadioButtonChequeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonChequeMouseClicked
        jTextFieldNumParc.setEnabled(false);
        jTextFieldJuroParc.setEnabled(false);
        jTextFieldValorParc.setEnabled(false);
        jComboBoxDiaVenc.setEnabled(false);
        jTextFieldDescontos.setEnabled(true);
        jFormattedTextFieldTotalReceb.setEnabled(true);
        jTextFieldNumParc.setText("");
        jTextFieldValorParc.setText("");
        jTextFieldDescontos.setText("0");
        String descontos = jTextFieldDescontos.getText().replace(",", ".");
        BigDecimal totalfinal = new BigDecimal(Float.parseFloat(jTextFieldTotalComp.getText()) - (Float.parseFloat(jTextFieldTotalComp.getText()) * (Float.parseFloat(descontos) / 100))).setScale(2, BigDecimal.ROUND_HALF_UP);
        jTextFieldTotal.setText(String.valueOf(totalfinal));
        jTextFieldJuroParc.setText("");
    }//GEN-LAST:event_jRadioButtonChequeMouseClicked

    private void jRadioButtonCartaoCredMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonCartaoCredMouseClicked
        jTextFieldNumParc.setEnabled(false);
        jTextFieldJuroParc.setEnabled(false);
        jTextFieldValorParc.setEnabled(false);
        jComboBoxDiaVenc.setEnabled(false);
        jTextFieldDescontos.setEnabled(true);
        jFormattedTextFieldTotalReceb.setEnabled(true);
        jTextFieldNumParc.setText("");
        jTextFieldValorParc.setText("");
        jTextFieldDescontos.setText("0");
        String descontos = jTextFieldDescontos.getText().replace(",", ".");
        BigDecimal totalfinal = new BigDecimal(Float.parseFloat(jTextFieldTotalComp.getText()) - (Float.parseFloat(jTextFieldTotalComp.getText()) * (Float.parseFloat(descontos) / 100))).setScale(2, BigDecimal.ROUND_HALF_UP);
        jTextFieldTotal.setText(String.valueOf(totalfinal));
        jTextFieldJuroParc.setText("");
    }//GEN-LAST:event_jRadioButtonCartaoCredMouseClicked

    private void jRadioButtonCartaoDebMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonCartaoDebMouseClicked
        jTextFieldNumParc.setEnabled(false);
        jTextFieldJuroParc.setEnabled(false);
        jTextFieldValorParc.setEnabled(false);
        jComboBoxDiaVenc.setEnabled(false);
        jTextFieldDescontos.setEnabled(true);
        jFormattedTextFieldTotalReceb.setEnabled(true);
        jTextFieldNumParc.setText("");
        jTextFieldValorParc.setText("");
        jTextFieldDescontos.setText("0");
        String descontos = jTextFieldDescontos.getText().replace(",", ".");
        BigDecimal totalfinal = new BigDecimal(Float.parseFloat(jTextFieldTotalComp.getText()) - (Float.parseFloat(jTextFieldTotalComp.getText()) * (Float.parseFloat(descontos) / 100))).setScale(2, BigDecimal.ROUND_HALF_UP);
        jTextFieldTotal.setText(String.valueOf(totalfinal));
        jTextFieldJuroParc.setText("");
    }//GEN-LAST:event_jRadioButtonCartaoDebMouseClicked

    private void jRadioButtonOutrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonOutrosMouseClicked
        jTextFieldNumParc.setEnabled(false);
        jTextFieldJuroParc.setEnabled(false);
        jTextFieldValorParc.setEnabled(false);
        jComboBoxDiaVenc.setEnabled(false);
        jTextFieldDescontos.setEnabled(true);
        jFormattedTextFieldTotalReceb.setEnabled(true);
        jTextFieldNumParc.setText("");
        jTextFieldValorParc.setText("");
        jTextFieldDescontos.setText("0");
        String descontos = jTextFieldDescontos.getText().replace(",", ".");
        BigDecimal totalfinal = new BigDecimal(Float.parseFloat(jTextFieldTotalComp.getText()) - (Float.parseFloat(jTextFieldTotalComp.getText()) * (Float.parseFloat(descontos) / 100))).setScale(2, BigDecimal.ROUND_HALF_UP);
        jTextFieldTotal.setText(String.valueOf(totalfinal));
        jTextFieldJuroParc.setText("");
    }//GEN-LAST:event_jRadioButtonOutrosMouseClicked

    private void jTextFieldDescontosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDescontosKeyReleased
        try {
            String descontos;
            if ("".equals(jTextFieldDescontos.getText())) {
                descontos = "0";
            } else {
                descontos = jTextFieldDescontos.getText().replace(",", ".");
            }
            BigDecimal totalfinal = new BigDecimal(Float.parseFloat(jTextFieldTotalComp.getText()) - (Float.parseFloat(jTextFieldTotalComp.getText()) * (Float.parseFloat(descontos) / 100))).setScale(2, BigDecimal.ROUND_HALF_UP);
            jTextFieldTotal.setText(String.valueOf(totalfinal));

            if (!"".equals(jFormattedTextFieldTotalReceb.getText())) {
                String totalReceb = jFormattedTextFieldTotalReceb.getText().replace(",", ".");
                BigDecimal troco = new BigDecimal(Float.parseFloat(totalReceb) - Float.parseFloat(jTextFieldTotal.getText())).setScale(2, BigDecimal.ROUND_HALF_UP);
                jTextFieldTroco.setText(String.valueOf(troco));
            }
        } catch (NumberFormatException ex) {
            //JOptionPane.showMessageDialog(this, "Descontos inválido!!!!!");
        }
    }//GEN-LAST:event_jTextFieldDescontosKeyReleased

    private void jTextFieldNumParcKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNumParcKeyReleased
        try {
            if ("".equals(jTextFieldNumParc.getText())) {
                jTextFieldValorParc.setText("");
                jTextFieldTotal.setText(jTextFieldTotalComp.getText());
            } else {
                Float total = Float.parseFloat(jTextFieldTotalComp.getText());
                int numParc = Integer.parseInt(jTextFieldNumParc.getText());
                Float juroParc = Float.parseFloat(jTextFieldJuroParc.getText()) / 100;
                BigDecimal valorParc = new BigDecimal((total / numParc) + (total / numParc * juroParc)).setScale(2, BigDecimal.ROUND_HALF_UP);
                jTextFieldValorParc.setText(String.valueOf(valorParc));

                difParc = (Float.parseFloat(jTextFieldValorParc.getText()) * numParc) - (total + (total * juroParc));
                BigDecimal totalfinal = new BigDecimal((Float.parseFloat(jTextFieldValorParc.getText()) * numParc) - difParc).setScale(2, BigDecimal.ROUND_HALF_UP);
                jTextFieldTotal.setText(String.valueOf(totalfinal));
            }
        } catch (NumberFormatException ex) {
            //JOptionPane.showMessageDialog(this, "Descontos inválido!!!!!");
        }
    }//GEN-LAST:event_jTextFieldNumParcKeyReleased

    private void jTextFieldJuroParcKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldJuroParcKeyReleased
        try {
            String juro;
            if ("".equals(jTextFieldJuroParc.getText())) {
                juro = "0";
            } else {
                juro = jTextFieldJuroParc.getText().replace(",", ".");
            }
            Float total = Float.parseFloat(jTextFieldTotalComp.getText());
            int numParc = Integer.parseInt(jTextFieldNumParc.getText());
            Float juroParc = Float.parseFloat(juro) / 100;
            BigDecimal valorParc = new BigDecimal((total / numParc) + (total / numParc * juroParc)).setScale(2, BigDecimal.ROUND_HALF_UP);
            jTextFieldValorParc.setText(String.valueOf(valorParc));

            difParc = (Float.parseFloat(jTextFieldValorParc.getText()) * numParc) - (total + (total * juroParc));
            BigDecimal totalfinal = new BigDecimal((Float.parseFloat(jTextFieldValorParc.getText()) * numParc) - difParc).setScale(2, BigDecimal.ROUND_HALF_UP);
            jTextFieldTotal.setText(String.valueOf(totalfinal));
        } catch (NumberFormatException ex) {
            //JOptionPane.showMessageDialog(this, "Descontos inválido!!!!!");
        }
    }//GEN-LAST:event_jTextFieldJuroParcKeyReleased

    private void jButtonAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjudaActionPerformed
        new TelaAjudaCadVenda().setVisible(true);
    }//GEN-LAST:event_jButtonAjudaActionPerformed

    private void jTextFieldQtdeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQtdeKeyTyped
        try {
            if (jTextFieldQtde.getText().length() > 5) {
                evt.consume();
            } else {
                Integer.parseInt(String.valueOf(evt.getKeyChar()));
            }
        } catch (NumberFormatException err) {
            //System.out.println("Informe apenas números!");
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldQtdeKeyTyped

    private void jTextFieldNumParcKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNumParcKeyTyped
        try {
            if (jTextFieldNumParc.getText().length() > 2) {
                evt.consume();
            } else {
                Integer.parseInt(String.valueOf(evt.getKeyChar()));
            }
        } catch (NumberFormatException err) {
            //System.out.println("Informe apenas números!");
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldNumParcKeyTyped

    private void jTextFieldJuroParcKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldJuroParcKeyTyped
        if (evt.getKeyChar() != ',' && evt.getKeyChar() != '.') {
            try {
                Integer.parseInt(String.valueOf(evt.getKeyChar()));
            } catch (NumberFormatException err) {
                //System.out.println("Informe apenas números!");
                evt.consume();
            }
        }
    }//GEN-LAST:event_jTextFieldJuroParcKeyTyped

    private void jTextFieldValorParcKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldValorParcKeyTyped
        if (evt.getKeyChar() != ',' && evt.getKeyChar() != '.') {
            try {
                Integer.parseInt(String.valueOf(evt.getKeyChar()));
            } catch (NumberFormatException err) {
                //System.out.println("Informe apenas números!");
                evt.consume();
            }
        }
    }//GEN-LAST:event_jTextFieldValorParcKeyTyped

    private void jTextFieldTotalCompKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTotalCompKeyTyped
        if (evt.getKeyChar() != ',' && evt.getKeyChar() != '.') {
            try {
                Integer.parseInt(String.valueOf(evt.getKeyChar()));
            } catch (NumberFormatException err) {
                //System.out.println("Informe apenas números!");
                evt.consume();
            }
        }
    }//GEN-LAST:event_jTextFieldTotalCompKeyTyped

    private void jTextFieldDescontosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDescontosKeyTyped
        if (evt.getKeyChar() != ',' && evt.getKeyChar() != '.') {
            try {
                Integer.parseInt(String.valueOf(evt.getKeyChar()));
            } catch (NumberFormatException err) {
                //System.out.println("Informe apenas números!");
                evt.consume();
            }
        }
    }//GEN-LAST:event_jTextFieldDescontosKeyTyped

    private void jTextFieldTotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTotalKeyTyped
        if (evt.getKeyChar() != ',' && evt.getKeyChar() != '.') {
            try {
                Integer.parseInt(String.valueOf(evt.getKeyChar()));
            } catch (NumberFormatException err) {
                //System.out.println("Informe apenas números!");
                evt.consume();
            }
        }
    }//GEN-LAST:event_jTextFieldTotalKeyTyped

    private void jTextFieldTrocoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTrocoKeyTyped
        if (evt.getKeyChar() != ',' && evt.getKeyChar() != '.') {
            try {
                Integer.parseInt(String.valueOf(evt.getKeyChar()));
            } catch (NumberFormatException err) {
                //System.out.println("Informe apenas números!");
                evt.consume();
            }
        }
    }//GEN-LAST:event_jTextFieldTrocoKeyTyped

    private void jFormattedTextFieldTotalRecebKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextFieldTotalRecebKeyReleased
        try {
            String totalReceb = jFormattedTextFieldTotalReceb.getText().replace(",", ".");
            BigDecimal troco = new BigDecimal(Float.parseFloat(totalReceb) - Float.parseFloat(jTextFieldTotal.getText())).setScale(2, BigDecimal.ROUND_HALF_UP);
            jTextFieldTroco.setText(String.valueOf(troco));
        } catch (NumberFormatException ex) {
            //JOptionPane.showMessageDialog(this, "Descontos inválido!!!!!");
        }
    }//GEN-LAST:event_jFormattedTextFieldTotalRecebKeyReleased

    private void jRadioButtonAVistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonAVistaActionPerformed
        jTextFieldNumParc.setEnabled(false);
        jTextFieldJuroParc.setEnabled(false);
        jTextFieldValorParc.setEnabled(false);
        jComboBoxDiaVenc.setEnabled(false);
        jTextFieldDescontos.setEnabled(true);
        jFormattedTextFieldTotalReceb.setEnabled(true);
        jTextFieldNumParc.setText("");
        jTextFieldValorParc.setText("");
        jTextFieldDescontos.setText("0");
        String descontos = jTextFieldDescontos.getText().replace(",", ".");
        BigDecimal totalfinal = new BigDecimal(Float.parseFloat(jTextFieldTotalComp.getText()) - (Float.parseFloat(jTextFieldTotalComp.getText()) * (Float.parseFloat(descontos) / 100))).setScale(2, BigDecimal.ROUND_HALF_UP);
        jTextFieldTotal.setText(String.valueOf(totalfinal));
        jTextFieldJuroParc.setText("");
    }//GEN-LAST:event_jRadioButtonAVistaActionPerformed

    private void jRadioButtonAPrazoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonAPrazoActionPerformed
        jTextFieldNumParc.setEnabled(true);
        jTextFieldJuroParc.setEnabled(true);
        //jTextFieldValorParc.setEnabled(true);
        jComboBoxDiaVenc.setEnabled(true);
        jTextFieldDescontos.setEnabled(false);
        jFormattedTextFieldTotalReceb.setEnabled(false);
        jTextFieldDescontos.setText("");
        jTextFieldJuroParc.setText("0");
        jTextFieldTotal.setText("");
        jTextFieldTroco.setText("");
    }//GEN-LAST:event_jRadioButtonAPrazoActionPerformed

    private void jRadioButtonChequeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonChequeActionPerformed
        jTextFieldNumParc.setEnabled(false);
        jTextFieldJuroParc.setEnabled(false);
        jTextFieldValorParc.setEnabled(false);
        jComboBoxDiaVenc.setEnabled(false);
        jTextFieldDescontos.setEnabled(true);
        jFormattedTextFieldTotalReceb.setEnabled(true);
        jTextFieldNumParc.setText("");
        jTextFieldValorParc.setText("");
        jTextFieldDescontos.setText("0");
        String descontos = jTextFieldDescontos.getText().replace(",", ".");
        BigDecimal totalfinal = new BigDecimal(Float.parseFloat(jTextFieldTotalComp.getText()) - (Float.parseFloat(jTextFieldTotalComp.getText()) * (Float.parseFloat(descontos) / 100))).setScale(2, BigDecimal.ROUND_HALF_UP);
        jTextFieldTotal.setText(String.valueOf(totalfinal));
        jTextFieldJuroParc.setText("");
    }//GEN-LAST:event_jRadioButtonChequeActionPerformed

    private void jRadioButtonCartaoCredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCartaoCredActionPerformed
        jTextFieldNumParc.setEnabled(false);
        jTextFieldJuroParc.setEnabled(false);
        jTextFieldValorParc.setEnabled(false);
        jComboBoxDiaVenc.setEnabled(false);
        jTextFieldDescontos.setEnabled(true);
        jFormattedTextFieldTotalReceb.setEnabled(true);
        jTextFieldNumParc.setText("");
        jTextFieldValorParc.setText("");
        jTextFieldDescontos.setText("0");
        String descontos = jTextFieldDescontos.getText().replace(",", ".");
        BigDecimal totalfinal = new BigDecimal(Float.parseFloat(jTextFieldTotalComp.getText()) - (Float.parseFloat(jTextFieldTotalComp.getText()) * (Float.parseFloat(descontos) / 100))).setScale(2, BigDecimal.ROUND_HALF_UP);
        jTextFieldTotal.setText(String.valueOf(totalfinal));
        jTextFieldJuroParc.setText("");
    }//GEN-LAST:event_jRadioButtonCartaoCredActionPerformed

    private void jRadioButtonCartaoDebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCartaoDebActionPerformed
        jTextFieldNumParc.setEnabled(false);
        jTextFieldJuroParc.setEnabled(false);
        jTextFieldValorParc.setEnabled(false);
        jComboBoxDiaVenc.setEnabled(false);
        jTextFieldDescontos.setEnabled(true);
        jFormattedTextFieldTotalReceb.setEnabled(true);
        jTextFieldNumParc.setText("");
        jTextFieldValorParc.setText("");
        jTextFieldDescontos.setText("0");
        String descontos = jTextFieldDescontos.getText().replace(",", ".");
        BigDecimal totalfinal = new BigDecimal(Float.parseFloat(jTextFieldTotalComp.getText()) - (Float.parseFloat(jTextFieldTotalComp.getText()) * (Float.parseFloat(descontos) / 100))).setScale(2, BigDecimal.ROUND_HALF_UP);
        jTextFieldTotal.setText(String.valueOf(totalfinal));
        jTextFieldJuroParc.setText("");
    }//GEN-LAST:event_jRadioButtonCartaoDebActionPerformed

    private void jRadioButtonOutrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOutrosActionPerformed
        jTextFieldNumParc.setEnabled(false);
        jTextFieldJuroParc.setEnabled(false);
        jTextFieldValorParc.setEnabled(false);
        jComboBoxDiaVenc.setEnabled(false);
        jTextFieldDescontos.setEnabled(true);
        jFormattedTextFieldTotalReceb.setEnabled(true);
        jTextFieldNumParc.setText("");
        jTextFieldValorParc.setText("");
        jTextFieldDescontos.setText("0");
        String descontos = jTextFieldDescontos.getText().replace(",", ".");
        BigDecimal totalfinal = new BigDecimal(Float.parseFloat(jTextFieldTotalComp.getText()) - (Float.parseFloat(jTextFieldTotalComp.getText()) * (Float.parseFloat(descontos) / 100))).setScale(2, BigDecimal.ROUND_HALF_UP);
        jTextFieldTotal.setText(String.valueOf(totalfinal));
        jTextFieldJuroParc.setText("");
    }//GEN-LAST:event_jRadioButtonOutrosActionPerformed

    private void tabelaPesquisaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaPesquisaMousePressed
        if (flag == 1) {
            String nomeCli = "" + tabelaPesquisa.getValueAt(tabelaPesquisa.getSelectedRow(), 0);
            jTextFieldCliente.setText(nomeCli);
        } else {
            conex.conexao();
            String nomeProd = "" + tabelaPesquisa.getValueAt(tabelaPesquisa.getSelectedRow(), 0);
            conex.executaSQL("select * from view_produtos_recentes_detalhes where nome='" + nomeProd + "'");
            try {
                conex.rs.first();
                jTextFieldValorItem.setText(String.valueOf(conex.rs.getBigDecimal("preco_venda")));
                jTextFieldQtde.setText("1");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Erro ao pesquisar o preço!\n" + ex.getMessage().replaceAll("ERROR:", ""));
            }
            conex.desconecta();
        }
    }//GEN-LAST:event_tabelaPesquisaMousePressed

    private void tabelaItensVendaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaItensVendaMouseEntered
        this.preencherItensVenda("select * from view_itens_venda_detalhes where codv=" + codv + "order by nome");

        String descontos = jTextFieldDescontos.getText().replace(",", ".");
        BigDecimal totalfinal = new BigDecimal(Float.parseFloat(jTextFieldTotalComp.getText()) - (Float.parseFloat(jTextFieldTotalComp.getText()) * (Float.parseFloat(descontos) / 100))).setScale(2, BigDecimal.ROUND_HALF_UP);
        jTextFieldTotal.setText(String.valueOf(totalfinal));

        try {
            String totalReceb = jFormattedTextFieldTotalReceb.getText().replace(",", ".");
            if (Integer.parseInt(totalReceb) == 0) {
                BigDecimal troco = new BigDecimal(Float.parseFloat(totalReceb) - Float.parseFloat(jTextFieldTotal.getText())).setScale(2, BigDecimal.ROUND_HALF_UP);
                jTextFieldTroco.setText(String.valueOf(troco));
            }
        } catch (NumberFormatException ex) {
            //JOptionPane.showMessageDialog(this, "Descontos inválido!!!!!");
        }
        //atualiza quantidades de produtos da tabela de produtos
        flag = 2;
        this.preencherTabelaProduto("select * from view_produtos_recentes_detalhes where nome ~* '" + jTextFieldProduto.getText() + "' order by nome");
        ////////////////////////////////////////////////////////

        try {
            if ("".equals(jTextFieldNumParc.getText())) {
                jTextFieldValorParc.setText("");
                jTextFieldTotal.setText(jTextFieldTotalComp.getText());
            } else {
                Float total = Float.parseFloat(jTextFieldTotalComp.getText());
                int numParc = Integer.parseInt(jTextFieldNumParc.getText());
                Float juroParc = Float.parseFloat(jTextFieldJuroParc.getText()) / 100;
                BigDecimal valorParc = new BigDecimal((total / numParc) + (total / numParc * juroParc)).setScale(2, BigDecimal.ROUND_HALF_UP);
                jTextFieldValorParc.setText(String.valueOf(valorParc));

                difParc = (Float.parseFloat(jTextFieldValorParc.getText()) * numParc) - (total + (total * juroParc));
                totalfinal = new BigDecimal((Float.parseFloat(jTextFieldValorParc.getText()) * numParc) - difParc).setScale(2, BigDecimal.ROUND_HALF_UP);
                jTextFieldTotal.setText(String.valueOf(totalfinal));
            }
        } catch (NumberFormatException ex) {
            //JOptionPane.showMessageDialog(this, "Descontos inválido!!!!!");
        }
    }//GEN-LAST:event_tabelaItensVendaMouseEntered

    private void preencherComboBoxDiaVenc() {
        jComboBoxDiaVenc.removeAllItems();
        jComboBoxDiaVenc.addItem("2");
        jComboBoxDiaVenc.addItem("5");
        jComboBoxDiaVenc.addItem("10");
        jComboBoxDiaVenc.addItem("15");
        jComboBoxDiaVenc.addItem("20");
        jComboBoxDiaVenc.addItem("25");
    }

    private void preencherTabelaCliente(String sql) {
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"Nome do cliente"};
        int i = 0;
        conex.conexao();
        conex.executaSQL(sql);
        try {
            conex.rs.first();
            do {
                dados.add(new Object[]{conex.rs.getString("nome")});
                i++;
            } while (conex.rs.next());
        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(this, "Erro ao preencher Arraylist!\n"+ex.getMessage());
        }

        ModeloTabela modelotabela = new ModeloTabela(dados, colunas);
        tabelaPesquisa.setModel(modelotabela);
        if (i > 2) {
            tabelaPesquisa.getColumnModel().getColumn(0).setPreferredWidth(490);
        } else {
            tabelaPesquisa.getColumnModel().getColumn(0).setPreferredWidth(506);
        }
        tabelaPesquisa.getColumnModel().getColumn(0).setResizable(false);
        tabelaPesquisa.getTableHeader().setReorderingAllowed(false);
        tabelaPesquisa.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tabelaPesquisa.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        conex.desconecta();
    }

    private void preencherTabelaProduto(String sql) {
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"Nome do produto", "Quantidade"};
        int i = 0;
        conex.conexao();
        conex.executaSQL(sql);
        try {
            conex.rs.first();
            do {
                dados.add(new Object[]{conex.rs.getString("nome"), conex.rs.getInt("quantidade")});
                i++;
            } while (conex.rs.next());
        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(this, "Erro ao preencher Arraylist!\n"+ex.getMessage());
        }

        ModeloTabela modelotabela = new ModeloTabela(dados, colunas);
        tabelaPesquisa.setModel(modelotabela);
        if (i > 2) {
            tabelaPesquisa.getColumnModel().getColumn(0).setPreferredWidth(387);
            tabelaPesquisa.getColumnModel().getColumn(1).setPreferredWidth(103);
        } else {
            tabelaPesquisa.getColumnModel().getColumn(0).setPreferredWidth(395);
            tabelaPesquisa.getColumnModel().getColumn(1).setPreferredWidth(111);
        }
        tabelaPesquisa.getColumnModel().getColumn(0).setResizable(false);
        tabelaPesquisa.getColumnModel().getColumn(1).setResizable(false);
        tabelaPesquisa.getTableHeader().setReorderingAllowed(false);
        tabelaPesquisa.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tabelaPesquisa.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        tabelaPesquisa.getColumnModel().getColumn(1).setCellRenderer(direita);

        conex.desconecta();
    }

    private void preencherItensVenda(String sql) {
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"Nome do produto", "Quantidade", "Valor Total R$"};
        int i = 0;
        conex.conexao();
        conex.executaSQL(sql);
        try {
            conex.rs.first();
            do {
                float valorProd = conex.rs.getFloat("preco_venda");
                int qtdVend = conex.rs.getInt("qtde_produto");
                float total = valorProd * qtdVend;
                // converter para decimal com duas casas após a vírgula!!!!!
                BigDecimal val = new BigDecimal(total).setScale(2, BigDecimal.ROUND_HALF_UP);
                ////////////////////////////////////////////////////////////
                dados.add(new Object[]{conex.rs.getString("nome"), conex.rs.getInt("qtde_produto"), val});
                i++;
            } while (conex.rs.next());
        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(this, "Erro ao preencher Arraylist!\n"+ex.getMessage());
        }

        ModeloTabelaItensVenda modelotabela = new ModeloTabelaItensVenda(dados, colunas);
        tabelaItensVenda.setModel(modelotabela);
        if (i > 2) {
            tabelaItensVenda.getColumnModel().getColumn(0).setPreferredWidth(290);
            tabelaItensVenda.getColumnModel().getColumn(1).setPreferredWidth(100);
            tabelaItensVenda.getColumnModel().getColumn(2).setPreferredWidth(100);
        } else {
            tabelaItensVenda.getColumnModel().getColumn(0).setPreferredWidth(290);
            tabelaItensVenda.getColumnModel().getColumn(1).setPreferredWidth(108);
            tabelaItensVenda.getColumnModel().getColumn(2).setPreferredWidth(108);
        }
        tabelaItensVenda.getColumnModel().getColumn(0).setResizable(false);
        tabelaItensVenda.getColumnModel().getColumn(1).setResizable(false);
        tabelaItensVenda.getColumnModel().getColumn(2).setResizable(false);
        tabelaItensVenda.getTableHeader().setReorderingAllowed(false);
        tabelaItensVenda.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tabelaItensVenda.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        tabelaItensVenda.getColumnModel().getColumn(1).setCellRenderer(direita);
        tabelaItensVenda.getColumnModel().getColumn(2).setCellRenderer(direita);
        this.somaProduto();

        conex.desconecta();
    }

    private void somaProduto() {
        float total = 0;
        BigDecimal totalreais;
        conex.executaSQL("select * from view_itens_venda_detalhes where codv =" + codv);
        try {
            while (conex.rs.next()) {
                total += conex.rs.getFloat("preco_venda") * conex.rs.getInt("qtde_produto");
            }
            totalreais = new BigDecimal(total).setScale(2, BigDecimal.ROUND_HALF_UP);
            jTextFieldTotalComp.setText(String.valueOf(totalreais));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro na soma do total!\n" + ex.getMessage().replaceAll("ERROR:", ""));
        }
    }

    private String getFormaPag() {
        if (jRadioButtonAVista.isSelected()) {
            return "À vista";
        } else if (jRadioButtonAPrazo.isSelected()) {
            return "À prazo";
        } else if (jRadioButtonCheque.isSelected()) {
            return "Cheque";
        } else if (jRadioButtonCartaoCred.isSelected()) {
            return "Cartão de Crédito";
        } else if (jRadioButtonCartaoDeb.isSelected()) {
            return "Cartão de Débito";
        }
        return "Outros";
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TelaCadastroVenda().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonAddItem;
    private javax.swing.JButton jButtonAjuda;
    private javax.swing.JButton jButtonBuscaCli;
    private javax.swing.JButton jButtonBuscaProd;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonExcluirProd;
    private javax.swing.JButton jButtonFinalizar;
    private javax.swing.JComboBox<String> jComboBoxDiaVenc;
    private javax.swing.JFormattedTextField jFormattedTextFieldData;
    private javax.swing.JFormattedTextField jFormattedTextFieldTotalReceb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButtonAPrazo;
    private javax.swing.JRadioButton jRadioButtonAVista;
    private javax.swing.JRadioButton jRadioButtonCartaoCred;
    private javax.swing.JRadioButton jRadioButtonCartaoDeb;
    private javax.swing.JRadioButton jRadioButtonCheque;
    private javax.swing.JRadioButton jRadioButtonOutros;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldCliente;
    private javax.swing.JTextField jTextFieldDescontos;
    private javax.swing.JTextField jTextFieldJuroParc;
    private javax.swing.JTextField jTextFieldNumParc;
    private javax.swing.JTextField jTextFieldProduto;
    private javax.swing.JTextField jTextFieldQtde;
    private javax.swing.JTextField jTextFieldTotal;
    private javax.swing.JTextField jTextFieldTotalComp;
    private javax.swing.JTextField jTextFieldTroco;
    private javax.swing.JTextField jTextFieldValorItem;
    private javax.swing.JTextField jTextFieldValorParc;
    private javax.swing.JTable tabelaItensVenda;
    private javax.swing.JTable tabelaPesquisa;
    // End of variables declaration//GEN-END:variables
}
